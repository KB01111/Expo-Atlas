const { getDefaultConfig } = require('expo/metro-config');

/** @type {import('expo/metro-config').MetroConfig} */
const config = getDefaultConfig(__dirname);

// Add support for animation libraries
config.resolver.assetExts.push('lottie');

// Configure module resolution for problematic packages
config.resolver.resolverMainFields = ['react-native', 'browser', 'main'];

// Add specific aliases for bundling issues
config.resolver.alias = {
  // Fix relative import issues in OpenTelemetry
  './propagation/TextMapPropagator': '@opentelemetry/api/build/esm/propagation/TextMapPropagator',
};

// Exclude server-only modules from web bundling
config.resolver.platforms = ['ios', 'android', 'native', 'web'];

// Optimize for React Native
config.transformer.getTransformOptions = async () => ({
  transform: {
    experimentalImportSupport: false,
    inlineRequires: true,
  },
});

module.exports = config;